{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/jeffreyquan/Projects/project2/tuesday-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _slicedToArray from \"/Users/jeffreyquan/Projects/project2/tuesday-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/jeffreyquan/Projects/project2/tuesday-client/src/components/partial/Collapsible.js\";\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n        fond-family: \\\"Abel\\\";\\n        font-size: 1.2rem;\\n        cursor: pointer;\\n        display: flex;\\n        justify-content: space-between;\\n        background-color: \", \";\\n        margin-bottom: 0;\\n    \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\nimport styled from 'styled-components';\n\nfunction Collapsible(props) {\n  const status = props.open || false;\n\n  const _useState = useState(status),\n        _useState2 = _slicedToArray(_useState, 2),\n        open = _useState2[0],\n        setOpen = _useState2[1];\n\n  const togglePanel = e => {\n    setOpen(!open);\n  };\n\n  let icon;\n  open ? icon = React.createElement(CloseRoundedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }) : icon = React.createElement(MenuRoundedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  });\n  const color = open && props.color ? \"transparent\" : props.color;\n  const Title = styled.h1(_templateObject(), props => props.color);\n  return React.createElement(\"div\", {\n    style: {\n      marginBottom: '4em'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Title, {\n    color: color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, props.title, \" \"), React.createElement(\"span\", {\n    onClick: e => togglePanel(e),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \" \", icon, \" \")), open ? React.createElement(\"div\", {\n    style: {\n      marginBottom: \"0\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \" \", props.children, \" \") : null);\n}\n\nexport default Collapsible;","map":{"version":3,"sources":["/Users/jeffreyquan/Projects/project2/tuesday-client/src/components/partial/Collapsible.js"],"names":["React","useState","CloseRoundedIcon","MenuRoundedIcon","styled","Collapsible","props","status","open","setOpen","togglePanel","e","icon","color","Title","h1","marginBottom","title","children"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAEA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,QAAMC,MAAM,GAAGD,KAAK,CAACE,IAAN,IAAc,KAA7B;;AADwB,oBAEAP,QAAQ,CAACM,MAAD,CAFR;AAAA;AAAA,QAEjBC,IAFiB;AAAA,QAEXC,OAFW;;AAIxB,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBF,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACH,GAFD;;AAIA,MAAII,IAAJ;AACAJ,EAAAA,IAAI,GAAGI,IAAI,GAAG,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAV,GAAiCA,IAAI,GAAG,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA5C;AAEA,QAAMC,KAAK,GAAGL,IAAI,IAAEF,KAAK,CAACO,KAAZ,GAAoB,aAApB,GAAoCP,KAAK,CAACO,KAAxD;AAGA,QAAMC,KAAK,GAAGV,MAAM,CAACW,EAAV,oBAMaT,KAAK,IAAIA,KAAK,CAACO,KAN5B,CAAX;AAWA,SACI;AAAK,IAAA,KAAK,EAAE;AAACG,MAAAA,YAAY,EAAE;AAAf,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEH,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,KAAK,CAACW,KAAb,MADA,EAC2B;AAAM,IAAA,OAAO,EAAGN,CAAD,IAAKD,WAAW,CAACC,CAAD,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAsCC,IAAtC,MAD3B,CADA,EAKCJ,IAAI,GAAI;AAAK,IAAA,KAAK,EAAE;AAACQ,MAAAA,YAAY,EAAE;AAAf,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAmCV,KAAK,CAACY,QAAzC,MAAJ,GAAiE,IALtE,CADJ;AASH;;AAED,eAAeb,WAAf","sourcesContent":["import React, { useState } from 'react';\n\nimport CloseRoundedIcon from '@material-ui/icons/CloseRounded';\nimport MenuRoundedIcon from '@material-ui/icons/MenuRounded';\nimport styled from 'styled-components';\n\nfunction Collapsible(props) {\n    const status = props.open || false\n    const [open, setOpen] = useState(status)\n\n    const togglePanel = (e) => {\n        setOpen(!open)\n    }\n\n    let icon\n    open ? icon = <CloseRoundedIcon /> : icon = <MenuRoundedIcon />\n\n    const color = open&&props.color ? \"transparent\" : props.color\n\n\n    const Title = styled.h1`\n        fond-family: \"Abel\";\n        font-size: 1.2rem;\n        cursor: pointer;\n        display: flex;\n        justify-content: space-between;\n        background-color: ${props => props.color};\n        margin-bottom: 0;\n    `;\n\n\n    return (\n        <div style={{marginBottom: '4em'}}>\n        <Title color={color} >\n        <span>{props.title} </span><span onClick={(e)=>togglePanel(e)}> {icon} </span>\n        </Title>\n\n        {open ? (<div style={{marginBottom: \"0\"}}> {props.children} </div>) : null}\n        </div>\n        )\n}\n\nexport default Collapsible\n"]},"metadata":{},"sourceType":"module"}