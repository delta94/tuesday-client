{"ast":null,"code":"import _slicedToArray from \"/Users/jeffreyquan/Projects/project2/tuesday-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/jeffreyquan/Projects/project2/tuesday-client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/Users/jeffreyquan/Projects/project2/tuesday-client/src/components/Task.js\";\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n        padding-left: 8px;\\n\\n        &:hover {\\n            cursor: pointer;\\n        }\\n  \"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n    width: 80%;\\n\\n      &:focus-within {\\n          border: 1px dashed lightgrey;\\n\\n      }\\n  \"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n    padding-left: 8px;\\n\\n      &:hover {\\n           transform: scale(1.1);\\n      }\\n\\n\\n  \"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n\\n    &:hover {\\n        background-color:#F5F6F8\\n    }\\n  \"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n    color: transparent;\\n    background-color: transparent;\\n\\n    &:hover {\\n        color: black;\\n    }\\n  \"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport SelectWrap from './partial/Select';\nimport Collapsible from './partial/Collapsible.js';\nimport moment from 'moment';\nimport { DatetimePicker, DatetimePickerTrigger, DatetimeRangePicker } from 'rc-datetime-picker';\nimport 'rc-datetime-picker/dist/picker.css';\nimport styled from 'styled-components';\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\n\nlet URL = (model, id = '') => {\n  return \"https://tuesday-server.herokuapp.com/\".concat(model, \"/\").concat(id);\n};\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap'\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    width: 200\n  },\n  selectWrap: {\n    padding: theme.spacing(0)\n  }\n}));\nconst Button = styled.button(_templateObject());\nconst Tr = styled.tr(_templateObject2());\nconst Td = styled.td(_templateObject3());\nconst Input = styled.input(_templateObject4());\nconst StyledDatetimePickerTrigger = styled(DatetimePickerTrigger)(_templateObject5());\nexport default function Task(props) {\n  const classes = useStyles();\n\n  const _useState = useState(props.task),\n        _useState2 = _slicedToArray(_useState, 2),\n        task = _useState2[0],\n        setTask = _useState2[1];\n\n  const _useState3 = useState(['Done', 'Working On It', 'Stuck']),\n        _useState4 = _slicedToArray(_useState3, 2),\n        statusOptions = _useState4[0],\n        setStatusOptions = _useState4[1];\n\n  const _useState5 = useState(props.task.status),\n        _useState6 = _slicedToArray(_useState5, 2),\n        taskStatus = _useState6[0],\n        setTaskStatus = _useState6[1];\n\n  const _useState7 = useState(['High', 'Medium', 'Low']),\n        _useState8 = _slicedToArray(_useState7, 2),\n        priorityOptions = _useState8[0],\n        setPriorityOptions = _useState8[1];\n\n  const _useState9 = useState(props.task.priority),\n        _useState10 = _slicedToArray(_useState9, 2),\n        taskPriority = _useState10[0],\n        setTaskPriority = _useState10[1];\n\n  const _useState11 = useState(props.task.owner),\n        _useState12 = _slicedToArray(_useState11, 2),\n        owner = _useState12[0],\n        setOwner = _useState12[1];\n\n  const _useState13 = useState(moment(props.task.due_date)),\n        _useState14 = _slicedToArray(_useState13, 2),\n        date = _useState14[0],\n        setDate = _useState14[1];\n\n  const shortcuts = {\n    'Today': moment(),\n    'Yesterday': moment().subtract(1, 'days'),\n    'Clear': ''\n  };\n\n  const updateTaskName = () => {\n    axios.put(URL('tasks', props.id), {\n      name: task,\n      group_id: props.group_id\n    });\n  };\n\n  const updateStatus = status => {\n    axios.put(URL('tasks', props.id), {\n      status,\n      group_id: props.group_id\n    });\n  };\n\n  const updatePriority = priority => {\n    axios.put(URL('tasks', props.id), {\n      priority,\n      group_id: props.group_id\n    });\n  };\n\n  const updateOwner = () => {\n    axios.put(URL('tasks', props.id), {\n      owner: owner,\n      group_id: props.group_id\n    });\n  };\n\n  const updateDate = date => {\n    console.log('date', date);\n    axios.put(URL('tasks', props.id), {\n      due_date: date,\n      group_id: props.group_id\n    });\n  };\n\n  return React.createElement(Tr, {\n    style: {\n      borderBottom: \"1px solid #F1F1F1\"\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    style: {\n      width: '1em',\n      backgroundColor: props.color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123\n    },\n    __self: this\n  }, React.createElement(Button, {\n    onClick: event => props.deleteTask(event, props.group, props.task),\n    color: props.color,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }, React.createElement(DeleteOutlineOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124\n    },\n    __self: this\n  }))), React.createElement(Td, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '30px',\n      height: '100%',\n      display: 'inline-block',\n      backgroundColor: props.color\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127\n    },\n    __self: this\n  }, \" \"), React.createElement(Input, {\n    onChange: event => setTask(event.target.value),\n    onBlur: updateTaskName,\n    id: \"filled-read-only-input\",\n    value: task.name,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128\n    },\n    __self: this\n  })), React.createElement(Td, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136\n    },\n    __self: this\n  }, React.createElement(Input, {\n    onChange: event => setOwner(event.target.value),\n    onBlur: updateOwner,\n    id: \"filled-read-only-input\",\n    value: owner,\n    margin: \"normal\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137\n    },\n    __self: this\n  })), React.createElement(Td, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  }, React.createElement(SelectWrap, {\n    name: 'status',\n    options: statusOptions,\n    value: taskStatus,\n    placeholder: '',\n    onChange: event => {\n      setTaskStatus(event.target.value);\n      updateStatus(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  }, React.createElement(StyledDatetimePickerTrigger, {\n    shortcuts: shortcuts,\n    moment: date,\n    onChange: event => {\n      setDate(event);\n      updateDate(event);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156\n    },\n    __self: this\n  }, React.createElement(Input, {\n    type: \"text\",\n    value: date.format('MMM DD'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }))), React.createElement(Td, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164\n    },\n    __self: this\n  }, React.createElement(SelectWrap, {\n    name: 'priority',\n    options: priorityOptions,\n    value: taskPriority,\n    placeholder: '',\n    className: classes.selectWrap,\n    onChange: event => {\n      setTaskPriority(event.target.value);\n      updatePriority(event.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/Users/jeffreyquan/Projects/project2/tuesday-client/src/components/Task.js"],"names":["React","useState","TextField","axios","makeStyles","SelectWrap","Collapsible","moment","DatetimePicker","DatetimePickerTrigger","DatetimeRangePicker","styled","DeleteOutlineOutlinedIcon","URL","model","id","useStyles","theme","container","display","flexWrap","textField","marginLeft","spacing","marginRight","paddingTop","paddingBottom","width","selectWrap","padding","Button","button","Tr","tr","Td","td","Input","input","StyledDatetimePickerTrigger","Task","props","classes","task","setTask","statusOptions","setStatusOptions","status","taskStatus","setTaskStatus","priorityOptions","setPriorityOptions","priority","taskPriority","setTaskPriority","owner","setOwner","due_date","date","setDate","shortcuts","subtract","updateTaskName","put","name","group_id","updateStatus","updatePriority","updateOwner","updateDate","console","log","borderBottom","backgroundColor","color","event","deleteTask","group","height","target","value","format"],"mappings":"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","sourcesContent":["import React, { useState} from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport axios from 'axios';\nimport { makeStyles} from '@material-ui/core/styles';\nimport SelectWrap from './partial/Select'\nimport Collapsible from './partial/Collapsible.js'\nimport moment from 'moment';\nimport { DatetimePicker, DatetimePickerTrigger, DatetimeRangePicker  } from 'rc-datetime-picker';\nimport 'rc-datetime-picker/dist/picker.css';\nimport styled from 'styled-components';\n\nimport DeleteOutlineOutlinedIcon from '@material-ui/icons/DeleteOutlineOutlined';\n\nlet URL = (model, id = '') => {\n  return `https://tuesday-server.herokuapp.com/${model}/${id}`\n}\n\nconst useStyles = makeStyles(theme => ({\n  container: {\n    display: 'flex',\n    flexWrap: 'wrap',\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    paddingTop: theme.spacing(0),\n    paddingBottom: theme.spacing(0),\n    width: 200,\n  },\n  selectWrap: {\n      padding: theme.spacing(0),\n  }\n\n}));\n\n\n  const Button = styled.button`\n    color: transparent;\n    background-color: transparent;\n\n    &:hover {\n        color: black;\n    }\n  `;\n\n  const Tr = styled.tr`\n\n    &:hover {\n        background-color:#F5F6F8\n    }\n  `;\n\n  const Td = styled.td`\n    padding-left: 8px;\n\n      &:hover {\n           transform: scale(1.1);\n      }\n\n\n  `;\n\n  const Input = styled.input`\n    width: 80%;\n\n      &:focus-within {\n          border: 1px dashed lightgrey;\n\n      }\n  `;\n\n  const StyledDatetimePickerTrigger = styled(DatetimePickerTrigger)`\n        padding-left: 8px;\n\n        &:hover {\n            cursor: pointer;\n        }\n  `;\n\n\n\nexport default function Task(props) {\n  const classes = useStyles();\n  const [task, setTask] = useState(props.task)\n  const [statusOptions, setStatusOptions] = useState(['Done', 'Working On It', 'Stuck'])\n  const [taskStatus, setTaskStatus] = useState(props.task.status)\n  const [priorityOptions, setPriorityOptions] = useState(['High', 'Medium', 'Low'])\n  const [taskPriority, setTaskPriority] = useState(props.task.priority)\n  const [owner, setOwner] = useState(props.task.owner)\n  const [date, setDate] = useState(moment(props.task.due_date))\n\n  const shortcuts = {\n    'Today': moment(),\n    'Yesterday': moment().subtract(1, 'days'),\n    'Clear': ''\n  };\n\n  const updateTaskName = () => {\n    axios.put(URL('tasks', props.id), { name: task, group_id: props.group_id })\n  }\n\n  const updateStatus = (status) => {\n    axios.put(URL('tasks', props.id), { status, group_id: props.group_id })\n  }\n\n  const updatePriority = (priority) => {\n    axios.put(URL('tasks', props.id), { priority, group_id: props.group_id })\n  }\n\n  const updateOwner = () => {\n    axios.put(URL('tasks', props.id), { owner: owner, group_id: props.group_id })\n  }\n\n  const updateDate = (date) => {\n    console.log('date', date);\n\n    axios.put(URL('tasks', props.id), { due_date: date, group_id: props.group_id })\n  }\n\n  return (\n\n    <Tr style={{borderBottom: \"1px solid #F1F1F1\"}}>\n        <td style={{width: '1em', backgroundColor: props.color}} >\n        <Button onClick={(event) => props.deleteTask(event, props.group, props.task)} color={props.color} ><DeleteOutlineOutlinedIcon/></Button>\n        </td>\n      <Td>\n        <div style={{width: '30px', height: '100%', display: 'inline-block', backgroundColor: props.color}} > </div>\n          <Input\n              onChange={(event) => setTask(event.target.value)}\n              onBlur={updateTaskName}\n              id=\"filled-read-only-input\"\n              value={task.name}\n              margin=\"normal\"\n          />\n      </Td>\n      <Td>\n          <Input\n              onChange={(event) => setOwner(event.target.value)}\n              onBlur={updateOwner}\n              id=\"filled-read-only-input\"\n              value={owner}\n              margin=\"normal\"\n          />\n      </Td>\n      <Td>\n          <SelectWrap\n              name={'status'}\n              options={statusOptions}\n              value={taskStatus}\n              placeholder={''}\n\n              onChange={(event) => { setTaskStatus(event.target.value); updateStatus(event.target.value) }}\n          />\n      </Td>\n      <td >\n          <StyledDatetimePickerTrigger\n            shortcuts={shortcuts}\n            moment={date}\n\n            onChange={(event) => { setDate(event); updateDate(event) }}>\n            <Input type=\"text\" value={date.format('MMM DD')} />\n          </StyledDatetimePickerTrigger>\n      </td>\n      <Td>\n          <SelectWrap\n              name={'priority'}\n              options={priorityOptions}\n              value={taskPriority}\n              placeholder={''}\n              className={classes.selectWrap}\n              onChange={(event) => { setTaskPriority(event.target.value); updatePriority(event.target.value) }}\n          />\n      </Td>\n    </Tr>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}